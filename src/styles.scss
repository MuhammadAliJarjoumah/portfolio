// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
// @use '/theme-colors' as theme;
// @use '@angular/material'as mat;
@use 'app/shared/mixins.scss'as mixins;
@use 'app/shared/variables'as variables;
@use 'app/responsive'as responsive;
@use 'app/themes/light-theme.scss';
@use 'app/themes/dark-theme.scss';
@use 'app/themes/custom-themes.scss';
@use 'app/shared/shimmer-effect.scss';
@import url('https://fonts.googleapis.com/css2?family=Nova+Square&family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&display=swap');
// @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&display=swap');

* {
    box-sizing: border-box;
}

html {
    // color-scheme: light;
    // @include mat.theme((color: mat.$azure-palette));
    scroll-behavior: smooth;
    // cursor: 'pointer';
}

.cursor-effect {
    position: absolute;
    width: 20px;
    height: 20px;
    background-color: transparent;
    pointer-events: none;
    transform: translate(-50%, -50%);
    box-shadow: 0 4px 8px rgba(variables.$beige, .5);
    border-radius: 50%;
}

// html.dark-mode {
// color-scheme: dark;
// @include mat.theme((color: mat.$violet-palette));
// }

p {
    margin: 0;
}

body {
    margin: 0;
    padding: 0;
    box-sizing: content-box;
    font-family: "arima", serif !important;
    color: variables.$beige;
    background: variables.$black;
}

body.overflow-hidden {
    overflow: hidden;
}

.mat-mdc-icon-button {
    display: grid !important;
    place-content: center;
}

.mat-mdc-raised-button:disabled {
    font-weight: 600;
    border-radius: .5rem;
    border: .1rem solid variables.$beige;
    padding: .8rem;
}

.mat-mdc-raised-button:not(:disabled),
.my-box-shadow {
    @include mixins.myBoxShadow;
}

.mat-mdc-raised-button:disabled {
    color: variables.$black !important;
    background-color: variables.$beige !important;
    opacity: .3;

    &:hover {
        box-shadow: rgba(0, 0, 0, 0.15) 1.95px 1.95px 2.6px;
        filter: drop-shadow(0 -11px -20px rgba(0, -20, -77, 30.04));
        backdrop-filter: blur(7px);
        background-color: rgba(159, 134, 192, 0.1);
    }
}

html::-webkit-scrollbar {
    width: 5px;
}

html::-webkit-scrollbar-thumb {
    background: variables.$beige;
    border-radius: .5rem;
}

html,
body {
    height: 100%;
}

input,
textarea {
    color: white;
    background-color: transparent;
    border: .1rem solid variables.$beige;
    border-radius: .5rem;
    padding: 1rem;
}

a,
a:visited {
    text-decoration: underline;
    color: variables.$beige;
    transition: all variables.$transitionVariable .2s;
    cursor: pointer;

    @media (hover: hover) {

        &:hover {
            text-decoration: none;
            opacity: 1;
        }
    }
}

.radius-border {
    border-radius: 40px;
}

.custom-button-style-1 {
    --w: 180px;
    --h: 45px;
    --icon-size: 25px;
    --text-color: rgb(210 210 240);
    --box-glow-color: transparent;
    --box-glow-blur: 20px;
    position: relative;
    min-width: var(--w);
    min-height: var(--h);
    border-radius: var(--h);
    display: flex;
    justify-content: center;
    align-items: center;
    border: none;
    font-family: "Montserrat";
    color: var(--text-color);
    background: rgb(4 8 20 / 0.8);
    box-shadow: 0 0 0 1px rgb(200 200 220 / 0.22),
        0 0 var(--box-glow-blur) var(--box-glow-color),
        inset 0 0 26px -10px var(--box-glow-color);
    overflow: hidden;
    cursor: pointer;
    transition: box-shadow 500ms variables.$transitionVariable;
    z-index: 2;

    &::before {
        content: "";
        position: absolute;
        inset: 0;
        background: variables.$black;
        box-shadow: inset 0 0px 24px 0 rgb(170 230 250 / 0.12);
        border-radius: var(--h);
        z-index: 1;
        transition: transform .5s variables.$transitionVariable, box-shadow .5s variables.$transitionVariable;
    }

    .text,
    .icon {
        z-index: 2;
    }

    .text {
        transform: translateX(-50%);
        font-family: "Montserrat";
        transition: transform 500ms variables.$transitionVariable;
    }

    .icon {
        position: absolute;
        width: var(--icon-size);
        height: var(--icon-size);
        left: 0;
        transform: translateX(calc((var(--w)) / 2 + 8px));
        transition: transform 500ms ease, color 500ms ease;
    }

    svg {
        width: 100%;
        height: 100%;
        fill: currentColor;
    }

    &:active {
        --box-glow-blur: 36px;
    }

    &:hover,
    &:active {
        --box-glow-color: var(--color);
    }

    &:hover::before,
    &:active::before {
        transform: translateX(65%);
        box-shadow: inset 0 0px 0px 0 transparent;
    }

    &:hover .text,
    &:active .text {
        transform: translateX(0%);
        animation-play-state: running;
    }

    &:hover .icon,
    &:active .icon {
        transform: translateX(calc(var(--w) - var(--icon-size) - 19px));
        color: var(--color);
    }

    &:focus-visible {
        outline: none;
    }

    &:focus-visible:not(:hover, :active) {
        --box-glow-color: rgb(114 114 114 / 0.5);
    }
}